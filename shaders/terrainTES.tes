#version 410 core                                                                               
                                                                                                
layout(triangles, equal_spacing, ccw) in;                                                       
					   
in vec2 WorldPos_ES_in[];                                                                        
                                                                                                
out vec2 WorldPos;
out vec2 Coords;        
		
vec2 interpolate2D(vec2 v0, vec2 v1, vec2 v2)                                                   
{                                                                                               
    return vec2(gl_TessCoord.x) * v0 + vec2(gl_TessCoord.y) * v1 + vec2(gl_TessCoord.z) * v2;   
}                                                                                               
                                                                                            
                                                                                                
void main()                                                                                     
{                                                                                               
    // Interpolate the attributes of the output vertex using the barycentric coordinates                                                            
    WorldPos = interpolate2D(WorldPos_ES_in[0], WorldPos_ES_in[1], WorldPos_ES_in[2]);
	Coords = WorldPos.xy;
    gl_Position = vec4(WorldPos, 0.0, 1.0);                                              
}                                                                                               
